// Block Grid
// Technique adapted from Foundation 5 for Bootstrap 3.
// https://github.com/zurb/foundation/blob/f755d8704123f86c281ede0b171881e2672f150d/scss/foundation/components/_block-grid.scss

@block-grid-gutter-width: 24px;
[class*="block-grid-"] {
  display: block;
  margin: -(@block-grid-gutter-width/2);
  padding: 0;
  .clearfix();
}

[class*="block-grid-"].gutter-4 {
  margin: -2px;
}
[class*="block-grid-"].gutter-6 {
  margin: -3px;
}
[class*="block-grid-"].gutter-8 {
  margin: -4px;
}
[class*="block-grid-"].gutter-10 {
  margin: -5px;
}


.block-grid-item {
  display: inline;
  margin: 0;
  padding: (@block-grid-gutter-width/2);
  height: auto;
  float: left;
  width: 100%;
  list-style: none;  // for those who like to use `li` elements as block-grid-items
}

.gutter-4 .block-grid-item {
  padding: 2px;
}
.gutter-6 .block-grid-item {
  padding: 3px;
}
.gutter-8 .block-grid-item {
  padding: 4px;
}
.gutter-10 .block-grid-item {
  padding: 5px;
}


.block-grid (@per-row) {
  & > .block-grid-item {
    width: (100%/@per-row);

    @nth-equation: ~"@{per-row}n+1";
    &:nth-of-type(n) { clear: none; }
    &:nth-of-type(@{nth-equation}) { clear: both; }
  }
}

// Recursive loop that produces rules for block grids of @per-row many items
// per row down to 1 many items per row.
.block-grids(@size, @per-row: @grid-columns) when (@per-row > 0) {
  .block-grid-@{size}-@{per-row} { .block-grid(@per-row); }
  .block-grids(@size, (@per-row - 1));
}

.block-grids(xs);
@media (min-width: @screen-sm-min) { .block-grids(sm) }
@media (min-width: @screen-md-min) { .block-grids(md) }
@media (min-width: @screen-lg-min) { .block-grids(lg) }


